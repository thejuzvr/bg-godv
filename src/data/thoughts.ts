import type { Character, Weather } from '@/types/character';

type ThoughtCategory =
  | 'generic_happy'
  | 'generic_neutral'
  | 'generic_sad'
  | 'low_health'
  | 'in_combat'
  | 'traveling'
  | 'in_city'
  | 'weather_rain'
  | 'weather_snow'
  | 'weather_clear'
  | 'weather_fog';

const thoughts: Record<ThoughtCategory, string[]> = {
  generic_happy: [
    'Какой прекрасный день для приключений!',
    'Сегодня мне море по колено!',
    'Кажется, сама удача мне улыбается.',
    'Нужно будет отметить этот день в таверне!',
    'Раньше я был искателем приключений, но потом... НЕТ, У МЕНЯ ВСЕ В ПОРЯДКЕ С КОЛЕНОМ!',
    'Нашел сладкую булочку! Никто не украл её! Это лучший день в моей жизни!',
    'Сегодня я не встретил Назима. Идеальный день.',
    'М\'Айк говорит правду! Иногда.',
    'Фус... РО ДА! Это никогда не надоест!',
    'Даже мой компаньон не потерялся сегодня. Чудеса!',
  ],
  generic_neutral: [
    'Герой смотрит на облака, размышляя о вечном.',
    'Интересно, что сегодня на ужин в "Гарцующей кобыле"?',
    'Нужно было все-таки украсть тот сладкий рулет...',
    'Еще один день, еще один септим.',
    'Пора бы проверить, не завалялось ли что-то ценное в карманах.',
    'Интересно, сколько колес сыра я смогу унести?',
    'Может, стоит надеть ведро на голову торговцу и ограбить его?',
    'Я бывал в Облачном квартале чаще, чем Назим думает.',
    'Деревянная тарелка... Интересно, можно ли с её помощью пройти сквозь стены?',
    'Где-то там бродит М\'Айк. Хотел бы я знать, что он сейчас делает.',
    'Курица смотрит на меня. Не буду её трогать. НИ ЗА ЧТО.',
    'Корзина на голове... Это стильно или глупо? Наверное, оба варианта.',
    'У меня в инвентаре 47 колес сыра. Это много или мало?',
    'Может, почитать "Похотливую аргонианку"? Для культурного развития, конечно.',
  ],
  generic_sad: [
    'Все тлен... Может, пойти в таверну?',
    'Иногда я задаюсь вопросом, а стоит ли оно того?',
    'Еще один серый день в этом сером мире.',
    'Может, стоило выбрать другую судьбу?',
    'Кто-то украл мою сладкую булочку... Снова.',
    'Раньше я был искателем приключений, но потом мне прострелили колено...',
    'Назим снова спросил про Облачный квартал. Моя душа болит.',
    'Мой компаньон застрял в двери. Опять.',
    'Даже Шеогорат не одобрил бы этот день.',
    'Курица на меня смотрит осуждающе. Она помнит.',
  ],
  low_health: [
    'Раны ноют. Нужно быть осторожнее.',
    'Нужно найти место для отдыха, и как можно скорее.',
    'Еще один такой удар, и я отправлюсь в Совнгард.',
    'Может, где-то завалялось зелье здоровья?',
    'Надо было не трогать того краба. Кто же знал, что он так больно щипается?',
    'Может, съесть колесо сыра? Или три?',
    'Это хуже, чем стрела в колено...',
    'Даже капуста бы меня сейчас спасла. ГДЕ ЖЕ ТА КАПУСТА?!',
    'Нужна сладкая булочка силы. СРОЧНО.',
    'М\'Айк говорил, что это безопасно. М\'Айк лгал.',
  ],
  in_combat: [
    'За славу и честь!',
    'Это будет славная битва!',
    'Я покажу тебе силу!',
    'Вперед, к победе!',
    'ФУС РО ДА!!!',
    'Сейчас ты почувствуешь вкус моего сыра!',
    'Никто не украдет мою сладкую булочку и уйдет живым!',
    'Я покажу тебе, что значит Довакин!',
    'За Скайрим! За норд ов!',
    'Вам конец, молокососы!',
    'Мне плевать, что ты курица! Ты зашла слишком далеко!',
  ],
  traveling: [
    'Дорога зовет, и я должен идти.',
    'Интересно, что ждет меня за следующим холмом?',
    'Скайрим велик, и я хочу увидеть его весь.',
    'Надеюсь, впереди не будет засады.',
    'Интересно, встречу ли я М\'Айка на этой дороге?',
    'Может, найду мод на лошадях-драконах... стоп, это уже бред.',
    'Томас Паровозик-дракон пролетел мимо. Это был странный день.',
    'Надеюсь, колеса сыра не слишком тяжелые для путешествия.',
    'Вдали виднеется Назим. Сворачиваю в другую сторону.',
    'Ведро на голове мешает смотреть на дорогу.',
  ],
  in_city: [
    'Городская суета утомляет, но здесь хотя бы безопасно.',
    'Может, заглянуть в местную лавку? Вдруг там есть что-то интересное.',
    'Слышал, ярл предлагает работу. Надо бы узнать поподробнее.',
    'Запах свежего хлеба из пекарни... как же хорошо!',
    'Вижу Назима вдали. Быстро сворачиваю в переулок.',
    'Кто-то продает сладкие булочки! Нужно купить ВСЕ!',
    'Стражники смотрят подозрительно. Наверное, помнят про курицу...',
    'В Облачном квартале я бываю! Я БЫВАЮ, НАЗИМ!',
    'Торговец снова жалуется на ведро. Может, помочь ему?',
    'Грязевой краб-торговец где-то здесь. Нужно найти его!',
    'Каджиты продают... что-то подозрительное. Скуму, наверное.',
    'Видел М\'Айка у фонтана. Он рассказывал что-то про летающих китов.',
  ],
  weather_rain: [
    'Опять этот дождь. Дороги развезло, идти будет тяжело.',
    'Нужно найти укрытие от ливня.',
    'Холодно и сыро. Не лучшая погода для путешествий.',
    'Сырные колеса намокают. ЭТО КАТАСТРОФА!',
    'Ведро на голове хотя бы защищает от дождя.',
    'Дождь смоет следы. И мои сладкие булочки размокнут...',
  ],
  weather_snow: [
    'Снег заметает следы. И мои, и чужие.',
    'Холодно... нужно согреться у костра.',
    'Зима в Скайриме сурова, но прекрасна.',
    'Снег... Снег никогда не меняется.',
    'Холодно. Даже Ледяной король меня пожалел бы.',
    'Заморозил сыр. Теперь это сырное оружие.',
  ],
  weather_clear: [
    'Какой прекрасный день! Солнце светит, птички поют.',
    'Отличная погода для приключений!',
    'Ясное небо — хороший знак.',
    'Идеальная погода для кражи сладких булочек!',
    'Солнце светит, драконы не летают. Отличный день!',
    'Ясная погода. Даже Назима не видно. Идеально.',
  ],
  weather_fog: [
    'Туман, как молоко. Ничего не видно.',
    'В таком тумане легко заблудиться или попасть в засаду.',
    'Нужно быть вдвойне осторожным.',
    'Туман... Может, это М\'Айк напустил его?',
    'Ничего не видно. Хорошо, что у меня есть ведро на голове!',
    'Туман такой густой, что даже Назим меня не найдет.',
  ],
};

function getRandomThought(category: ThoughtCategory): string {
  const categoryThoughts = thoughts[category];
  return categoryThoughts[Math.floor(Math.random() * categoryThoughts.length)];
}

export function getFallbackThought(character: Character): string {
  // Priority-based selection
  if (character.status === 'in-combat') {
    return getRandomThought('in_combat');
  }
  if (character.stats.health.current / character.stats.health.max < 0.3) {
    return getRandomThought('low_health');
  }
  if (character.currentAction?.type === 'travel') {
    return getRandomThought('traveling');
  }
  if (character.status === 'idle' && character.location) {
     return getRandomThought('in_city');
  }

  // Weather-based thoughts
  switch (character.weather) {
    case 'Rain':
      return getRandomThought('weather_rain');
    case 'Snow':
      return getRandomThought('weather_snow');
    case 'Fog':
      return getRandomThought('weather_fog');
    case 'Clear':
       if (Math.random() < 0.3) return getRandomThought('weather_clear'); // Only sometimes
       break;
  }
  
  // Mood-based thoughts
  if (character.mood > 70) {
    return getRandomThought('generic_happy');
  }
  if (character.mood < 40) {
    return getRandomThought('generic_sad');
  }
  
  // Default neutral thought
  return getRandomThought('generic_neutral');
}
